generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String          @id @default(cuid())
  name                   String
  email                  String          @unique
  password               String
  imageUrl               String?         @default("/static/default.jpg")
  createdAt              DateTime        @default(now())
  updatedAt              DateTime        @updatedAt
  online                 Boolean         @default(false)
  chats                  Chat[]
  message                Message[]
  friends                User[]          @relation("Friends")
  friendOf               User[]          @relation("Friends")
  friendRequestsSent     FriendRequest[] @relation("SentRequests")
  friendRequestsReceived FriendRequest[] @relation("ReceivedRequests")
}

model Chat {
  id        String    @id @default(cuid())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  users     User[]
  messages  Message[]
}

model Message {
  id        String   @id @default(cuid())
  text      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  chat      Chat     @relation(fields: [chatId], references: [id])
  userId    String
  chatId    String
}

model FriendRequest {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  sender     User     @relation(name: "SentRequests", fields: [senderId], references: [id])
  receiver   User     @relation(name: "ReceivedRequests", fields: [receiverId], references: [id])
  status     String // You can customize this field based on your needs, e.g., "pending", "accepted", "rejected"
  senderId   String
  receiverId String
}
